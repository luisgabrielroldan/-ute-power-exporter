package ute

import (
	"net/http"
	"net/http/httptest"
	"testing"
	"time"
)

const CHARGE_CURVE_CHART_JSON = `{"colors": ["rgba(64, 64, 192, 1)","rgba(192, 64, 64, 1)","rgba(64, 192, 64, 1)","rgba(192, 192, 64, 1)","rgba(192, 64, 192, 1)","rgba(64, 192, 192, 1)"], "data_array" : [{"data" : [[1722913200000,0.18],[1722914100000,0.18],[1722915000000,0.18],[1722915900000,0.18],[1722916800000,0.18],[1722917700000,0.17],[1722918600000,0.16],[1722919500000,0.17],[1722920400000,0.17],[1722921300000,0.28],[1722922200000,0.18],[1722923100000,0.18],[1722924000000,0.17],[1722924900000,0.18],[1722925800000,0.18],[1722926700000,0.24],[1722927600000,0.36],[1722928500000,0.61],[1722929400000,0.2],[1722930300000,0.24],[1722931200000,0.22],[1722932100000,0.22],[1722933000000,0.24],[1722933900000,0.2],[1722934800000,0.26],[1722935700000,0.21],[1722936600000,0.19],[1722937500000,0.24],[1722938400000,0.24],[1722939300000,0.18],[1722940200000,0.2],[1722941100000,0.24],[1722942000000,0.2],[1722942900000,0.19],[1722943800000,0.21],[1722944700000,0.22],[1722945600000,0.18],[1722946500000,0.21],[1722947400000,0.21],[1722948300000,0.18],[1722949200000,0.2],[1722950100000,0.22],[1722951000000,0.3],[1722951900000,0.58],[1722952800000,0.6],[1722953700000,0.24],[1722954600000,0.22],[1722955500000,0.24],[1722956400000,0.25],[1722957300000,0.22],[1722958200000,0.16],[1722959100000,0.25],[1722960000000,0.51],[1722960900000,0.51],[1722961800000,0.44],[1722962700000,0.35],[1722963600000,0.4],[1722964500000,0.3],[1722965400000,0.15],[1722966300000,0.17]], "label": "Energia Activa Entrante kWh"},{"data" : [[1722913200000,0],[1722914100000,0],[1722915000000,0],[1722915900000,0],[1722916800000,0],[1722917700000,0],[1722918600000,0],[1722919500000,0],[1722920400000,0],[1722921300000,0],[1722922200000,0],[1722923100000,0],[1722924000000,0],[1722924900000,0],[1722925800000,0],[1722926700000,0],[1722927600000,0],[1722928500000,0],[1722929400000,0],[1722930300000,0],[1722931200000,0],[1722932100000,0],[1722933000000,0],[1722933900000,0],[1722934800000,0],[1722935700000,0],[1722936600000,0],[1722937500000,0],[1722938400000,0],[1722939300000,0],[1722940200000,0],[1722941100000,0],[1722942000000,0],[1722942900000,0],[1722943800000,0],[1722944700000,0],[1722945600000,0],[1722946500000,0],[1722947400000,0],[1722948300000,0],[1722949200000,0],[1722950100000,0],[1722951000000,0],[1722951900000,0],[1722952800000,0],[1722953700000,0],[1722954600000,0],[1722955500000,0],[1722956400000,0],[1722957300000,0],[1722958200000,0],[1722959100000,0],[1722960000000,0],[1722960900000,0],[1722961800000,0],[1722962700000,0],[1722963600000,0],[1722964500000,0],[1722965400000,0],[1722966300000,0]], "label": "Energia Reactiva - Q1 kVArh"}],"ticks" : [1722913200000,1722914100000,1722915000000,1722915900000,1722916800000,1722917700000,1722918600000,1722919500000,1722920400000,1722921300000,1722922200000,1722923100000,1722924000000,1722924900000,1722925800000,1722926700000,1722927600000,1722928500000,1722929400000,1722930300000,1722931200000,1722932100000,1722933000000,1722933900000,1722934800000,1722935700000,1722936600000,1722937500000,1722938400000,1722939300000,1722940200000,1722941100000,1722942000000,1722942900000,1722943800000,1722944700000,1722945600000,1722946500000,1722947400000,1722948300000,1722949200000,1722950100000,1722951000000,1722951900000,1722952800000,1722953700000,1722954600000,1722955500000,1722956400000,1722957300000,1722958200000,1722959100000,1722960000000,1722960900000,1722961800000,1722962700000,1722963600000,1722964500000,1722965400000,1722966300000]}`

func TestGetChargeCurveChartData(t *testing.T) {
	server := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		w.Header().Set("Content-Type", "application/json")
		w.WriteHeader(http.StatusOK)
		w.Write([]byte(CHARGE_CURVE_CHART_JSON))
	}))
	defer server.Close()

	uteClient := &Client{
		HTTPClient:          server.Client(),
		AutoServicioBaseUrl: server.URL,
	}

	fromTime, _ := time.Parse("02-01-2006", "06-08-2024")
	toTime, _ := time.Parse("02-01-2006", "06-08-2024")

	data, err := uteClient.GetChargeCurveChartData("0299186155", fromTime, toTime, []Magnitude{ImportActiveEnergy, Q1ReactiveEnergy, Q2ReactiveEnergy})

	if err != nil {
		t.Error(err)
	}

	if data == nil {
		t.Error("data is nil")
	}

	if len(data.DataArray) != 2 {
		t.Errorf("expected 2 data arrays, got %d", len(data.DataArray))
	}

	if len(data.DataArray[0].Data) != 60 {
		t.Errorf("expected 59 data points, got %d", len(data.DataArray[0].Data))
	}

	if data.DataArray[0].Label != "Energia Activa Entrante kWh" {
		t.Errorf("expected label Energia Activa Entrante kWh, got %s", data.DataArray[0].Label)
	}

	if data.DataArray[1].Label != "Energia Reactiva - Q1 kVArh" {
		t.Errorf("expected label Energia Reactiva - Q1 kVArh, got %s", data.DataArray[1].Label)
	}
}
